apply plugin: 'java'

ext{
    jacksonVersion = '1.9.13'
    sqlite = '3.16.1'
    mysqlVersion = '5.1.34'
    jexcelapi = '2.6.10'
    mailVersion = '1.4.7'
    myBatisVersion = '3.2.2'
    myBatisSpringVersion = '1.2.1'
    aspectjweaverVersion = "1.7.4"
    springWebmvcVersion = "3.2.4.RELEASE"
    springOrmVersion = "3.2.4.RELEASE"
    zkclientVersion = "2.1"
    jsonLibVersion = "2.4"
    c3p0Version = "0.9.1.2"
    cglibVersion = "2.2.2"
    dom4jVersion = "1.6.1"
    fastjsonVersion = '1.1.40'
    commonsFileuploadVersion = '1.3.1'
    pinyin4j = '2.5.0'
    guavaVersion = '15.0'
    redisVersion = '2.8.1'
}

dependencies {
    compile "org.codehaus.jackson:jackson-core-asl:$jacksonVersion"
    compile "org.codehaus.jackson:jackson-mapper-asl:$jacksonVersion"
    compile "org.xerial:sqlite-jdbc:$sqlite"
    compile "net.sourceforge.jexcelapi:jxl:$jexcelapi"
    compile "javax.mail:mail:$mailVersion"
    compile "org.mybatis:mybatis:$myBatisVersion"
    compile "org.mybatis:mybatis-spring:$myBatisSpringVersion"
    compile "org.aspectj:aspectjweaver:$aspectjweaverVersion"
    compile "org.springframework:spring-webmvc:$springWebmvcVersion"
    compile "com.github.adyliu:zkclient:$zkclientVersion"
    compile "net.sf.json-lib:json-lib:$jsonLibVersion"+":jdk15"
    compile "c3p0:c3p0:$c3p0Version"
    compile "cglib:cglib:$cglibVersion"
    compile "dom4j:dom4j:$dom4jVersion"
    compile "com.alibaba:fastjson:$fastjsonVersion"
    compile "commons-fileupload:commons-fileupload:$commonsFileuploadVersion"
    compile 'javax.servlet:javax.servlet-api:3.0.1'
    compile "com.google.guava:guava:$guavaVersion"
}

serviceName = System.getProperty("serv", "startzmail")

task renameWar(type:Copy, dependsOn:war) {
    from "target.txt"
    from 'build/libs/'
    into 'build/release/'
    rename('sadmin.war','ROOT.war')
}

task zipWar(type:Zip,dependsOn:renameWar){
    from 'build/release'
    baseName = 'upload'
}

task copyJarsTobin(type: Copy,dependsOn:jar) {
    from configurations.runtime
    from "build/libs/sadmin.jar"
    into "build/services/$serviceName/bin"
}

task copyConfigFile(type: Copy,dependsOn:copyJarsTobin) {
    into "build/services/$serviceName/classes"
    from "build/resources/main"
}

task releaseService(type: Copy,dependsOn:copyConfigFile) {
    into "build/services/$serviceName"
    from "start$serviceName"+".sh"
}


jar {
    exclude('*.properties')
    exclude('*.xml')
}

ext {

}


test {
    exclude 'contact/**'
}

task contactTest(type: Test) {
    include 'contact/**'
}